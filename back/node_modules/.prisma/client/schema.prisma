generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  role      String    @default("USER")
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Hotel {
  id            Int       @id @default(autoincrement())
  name          String
  location      String
  description   String
  price         Float
  imageUrl      String?
  rating        Float?
  hasRestaurant Boolean   @default(false)
  hasCafe       Boolean   @default(false)
  amenities     String[]
  rooms         Room[]
  bookings      Booking[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
}

model Room {
  id        Int       @id @default(autoincrement())
  hotelId   Int
  capacity  Int
  hotel     Hotel     @relation(fields: [hotelId], references: [id])
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Booking {
  id           Int       @id @default(autoincrement())
  userId       Int
  hotelId      Int
  roomId       Int
  checkInDate  DateTime
  checkOutDate DateTime
  guestCount   Int
  user         User      @relation(fields: [userId], references: [id])
  hotel        Hotel     @relation(fields: [hotelId], references: [id])
  room         Room      @relation(fields: [roomId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model CafeRestaurant {
  id          Int       @id @default(autoincrement())
  name        String
  location    String
  description String
  imageUrl    String?
  type        String
  rating      Float?
  amenities   String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}
